{"ast":null,"code":"var _jsxFileName = \"/Users/xinshuangzhai/Desktop/Spring2019/CSCI4230/MessageSystem/src/components/RoomList/index.js\";\nimport React from 'react';\nimport style from './index.module.css';\n\nvar Icon = function Icon(id) {\n  return React.createElement(\"svg\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"use\", {\n    xlinkHref: \"index.svg#\".concat(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }));\n};\n\nvar unreads = function unreads(user, room) {\n  var messages = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var read = user.readCursor({\n    roomId: room.id\n  });\n  return read && Object.keys(messages).filter(function (x) {\n    return x > read.position;\n  }).length || undefined;\n};\n\nvar priority = function priority(user, room) {\n  var messages = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var unreadMessages = unreads(user, room, messages) || 0;\n  var lastMessage = Object.keys(messages).pop() || 0;\n  return (10 * unreadMessages + parseInt(lastMessage)) * -1;\n};\n\nexport var RoomList = function RoomList(_ref) {\n  var _ref$rooms = _ref.rooms,\n      rooms = _ref$rooms === void 0 ? [] : _ref$rooms,\n      user = _ref.user,\n      messages = _ref.messages,\n      current = _ref.current,\n      typing = _ref.typing,\n      actions = _ref.actions;\n  return React.createElement(\"ul\", {\n    className: style.component,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, rooms.map(function (room) {\n    var messageKeys = Object.keys(messages[room.id] || {});\n    var latestMessage = messageKeys.length > 0 && messages[room.id][messageKeys.pop()];\n    var firstUser = room.users.find(function (x) {\n      return x.id !== user.id;\n    });\n    var order = priority(user, room, messages[room.id]);\n    var unreadCount = unreads(user, room, messages[room.id]);\n    return React.createElement(\"li\", {\n      key: room.id,\n      disabled: room.id === current.id,\n      onClick: function onClick(e) {\n        return actions.joinRoom(room);\n      },\n      style: {\n        order: order\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, room.name.match(user.id) && firstUser ? React.createElement(\"img\", {\n      src: firstUser.avatarURL,\n      alt: firstUser.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }) : Icon(room.isPrivate ? 'lock' : 'public'), React.createElement(\"col-\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, room.name.replace(user.id, '')), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, latestMessage && latestMessage.text)), room.id !== current.id && unreadCount ? React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, unreadCount) : Object.keys(typing[room.id] || {}).length > 0);\n  }));\n};","map":{"version":3,"sources":["/Users/xinshuangzhai/Desktop/Spring2019/CSCI4230/MessageSystem/src/components/RoomList/index.js"],"names":["React","style","Icon","id","unreads","user","room","messages","read","readCursor","roomId","Object","keys","filter","x","position","length","undefined","priority","unreadMessages","lastMessage","pop","parseInt","RoomList","rooms","current","typing","actions","component","map","messageKeys","latestMessage","firstUser","users","find","order","unreadCount","e","joinRoom","name","match","avatarURL","isPrivate","replace","text"],"mappings":"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","sourcesContent":["import React from 'react'\nimport style from './index.module.css'\n\nconst Icon = id => (\n  <svg>\n    <use xlinkHref={`index.svg#${id}`} />\n  </svg>\n)\n\nconst unreads = (user, room, messages = {}) => {\n  const read = user.readCursor({ roomId: room.id })\n  return (\n    (read && Object.keys(messages).filter(x => x > read.position).length) ||\n    undefined\n  )\n}\n\nconst priority = (user, room, messages = {}) => {\n  const unreadMessages = unreads(user, room, messages) || 0\n  const lastMessage = Object.keys(messages).pop() || 0\n  return (10 * unreadMessages + parseInt(lastMessage)) * -1\n}\n\nexport const RoomList = ({\n  rooms = [],\n  user,\n  messages,\n  current,\n  typing,\n  actions,\n}) => (\n  <ul className={style.component}>\n    {rooms.map(room => {\n      const messageKeys = Object.keys(messages[room.id] || {})\n      const latestMessage =\n        messageKeys.length > 0 && messages[room.id][messageKeys.pop()]\n      const firstUser = room.users.find(x => x.id !== user.id)\n      const order = priority(user, room, messages[room.id])\n      const unreadCount = unreads(user, room, messages[room.id])\n      return (\n        <li\n          key={room.id}\n          disabled={room.id === current.id}\n          onClick={e => actions.joinRoom(room)}\n          style={{ order }}\n        >\n          {room.name.match(user.id) && firstUser ? (\n            <img src={firstUser.avatarURL} alt={firstUser.id} />\n          ) : (\n            Icon(room.isPrivate ? 'lock' : 'public')\n          )}\n          <col->\n            <p>{room.name.replace(user.id, '')}</p>\n            <span>{latestMessage && latestMessage.text}</span>\n          </col->\n          {room.id !== current.id && unreadCount ? (\n            <label>{unreadCount}</label>\n          ) : Object.keys(typing[room.id] || {}).length > 0}\n        </li>\n      )\n    })}\n  </ul>\n)\n"]},"metadata":{},"sourceType":"module"}